                                DS1307 Functions
                                ================

These functions are for controlling a DS1307 timekeeper IC using I2C.

A few simple functions are provided that will allow controlling the device and
reading back the current date and time.


                    ========================================

Prerequisites
-------------

Before using these functions in your programs the following things must be set
up.

1) A constant called 'CLOCK' must be defined which is set to the value of the
   PIC clock (not the instruction cycle clock) measured in Hz.

-------- example code --------

; Set the clock as 4 MHz

CLOCK   EQU     4000000

-------- example code --------


2) The I2C interface must be configured, see prerequisites section of
   README.i2c for constants, variables and header files required.


3) Variables for storing the time and date read from the device must be
   defined which are in the same memory bank as the hardware port defined by
   I2C_PORT.

-------- example code --------

        cblock  0x20
                ds1307_second   ; Required for "ds1307.inc"
                ds1307_minute   ; Required for "ds1307.inc"
                ds1307_hour     ; Required for "ds1307.inc"
                ds1307_day      ; Required for "ds1307.inc"
                ds1307_date     ; Required for "ds1307.inc"
                ds1307_month    ; Required for "ds1307.inc"
                ds1307_year     ; Required for "ds1307.inc"
        endc

-------- example code --------


4) The file "ds1307.inc" must be included somewhere in the program (I usually
    put them at the end of the program just before the 'end').  This must come
    after the definition of all of the constants.

-------- example code --------

        include "ds1307.inc"

        end

-------- example code --------


                    ========================================

Initialisation
--------------

The initialisation required for the hardware is just the initialisation for the
I2C functions described in README.i2c.

There is not necessarily any initialisation of the DS1307 device needed, it may
already have been initialised and be running.  The functions to start the clock
and enable the square wave output may be required as well as the function to set
the time.


                    ========================================

Start/Stop Clock
----------------

The clock in the DS1307 will not be running unless the clock halt bit is reset.
On a hard reset of the device this bit may be set and need to be cleared.

To start the clock the ds1307_start_clock function should be called.  This will
start the clock by clearing the clock halt bit but leave the other bits in the
byte unchanged.  To stop the clock the ds1307_stop_clock function should be
called which will set the clock halt bit and leave the other bits unchanged.

-------- example code --------

;; Start the clock in the DS1307

        call    ds1307_start_clock

;; Stop the clock in the DS1307

        call    ds1307_stop_clock

-------- example code --------


Start/Stop PPS Output
---------------------

A Pulse Per Second (PPS) output of the DS1307 can be generated by configuring
the square wave output with the correct frequency (1 Hz).  This will not be
running unless it has been configured.

To start the PPS the ds1307_enable_pps function should be called.  This will
start the PPS output by setting the 1 Hz and output enable parameters.  To stop
the PPS output the ds1307_disable_pps function should be called.

-------- example code --------

;; Start the PPS output in the DS1307

        call    ds1307_enable_pps

;; Stop the PPS output in the DS1307

        call    ds1307_disable_pps

-------- example code --------


Read/Write Time and Date
------------------------

The time and data stored in the DS1307 device can be copied to and from the
variables in the software by using the read and write commands.  Each command
will copy all of the 7 variables (seconds, minutes, hours, day of week, date,
month, year) in a single I2C transfer.

To copy the data from the DS1307 device to the variables in the software use the
ds1307_read command and to copy the variables in the software to the DS1307
device use the ds1307_write command.

-------- example code --------

;; Read the date and time from the DS1307

        call    ds1307_read

;; Write the date and time to the DS1307

        call    ds1307_write

-------- example code --------
